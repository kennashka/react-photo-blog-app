{"ast":null,"code":"import _toConsumableArray from \"/Users/kenya/Desktop/react-pic-app/kenyawall/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport posts from '../data/posts';\nimport { combineReducers } from 'redux';\n\nfunction comments() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return state;\n}\n\nya = function posts() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : posts;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'REMOVE_POST':\n      return [].concat(_toConsumableArray(state.slice(0, action.index)), _toConsumableArray(state.slice(action.index + 1)));\n\n    case 'ADD_POST':\n      return [].concat(_toConsumableArray(state), [action.post]);\n\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  ya: ya,\n  comments: comments\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/kenya/Desktop/react-pic-app/kenyawall/src/redux/reducer.js"],"names":["posts","combineReducers","comments","state","action","ya","type","slice","index","post","rootReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,SAAQC,eAAR,QAA8B,OAA9B;;AAEA,SAASC,QAAT,GAAmC;AAAA,MAAjBC,KAAiB,uEAAX,EAAW;AAAA,MAAPC,MAAO;AAC/B,SAAOD,KAAP;AACH;;AAEDE,EAAE,GAAG,SAASL,KAAT,GAAqC;AAAA,MAAtBG,KAAsB,uEAAdH,KAAc;AAAA,MAAPI,MAAO;;AAG1C,UAAOA,MAAM,CAACE,IAAd;AACI,SAAK,aAAL;AAAoB,0CAAWH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAeH,MAAM,CAACI,KAAtB,CAAX,sBAA4CL,KAAK,CAACI,KAAN,CAAYH,MAAM,CAACI,KAAP,GAAe,CAA3B,CAA5C;;AACpB,SAAK,UAAL;AAAiB,0CAAWL,KAAX,IAAkBC,MAAM,CAACK,IAAzB;;AACjB;AAAS,aAAON,KAAP;AAHb;AAOC,CAVD;;AAYA,IAAMO,WAAW,GAAGT,eAAe,CAAC;AAACI,EAAAA,EAAE,EAAFA,EAAD;AAAKH,EAAAA,QAAQ,EAARA;AAAL,CAAD,CAAnC;AAEA,eAAeQ,WAAf","sourcesContent":["import posts from '../data/posts'\nimport {combineReducers} from 'redux'\n\nfunction comments(state=[], action){\n    return state\n}\n\nya = function posts(state = posts, action){\n\n\nswitch(action.type){\n    case 'REMOVE_POST': return [...state.slice(0, action.index), ...state.slice(action.index + 1 )]\n    case 'ADD_POST': return [...state, action.post]\n    default: return state\n}\n\n\n}\n\nconst rootReducer = combineReducers({ya, comments})\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}