{"ast":null,"code":"import _toConsumableArray from \"/Users/kenya/Desktop/react-pic-app/kenyawall/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _posts from '../data/posts';\nimport { combineReducers } from 'redux'; // function comments(state=[], action){\n//     console.log('comments reducer')\n//     return state\n// }\n\nvar postReducer = function posts() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _posts;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // console.log('posts reducer')\n  switch (action.type) {\n    case 'REMOVE_POST':\n      return [].concat(_toConsumableArray(state.slice(0, action.index)), _toConsumableArray(state.slice(action.index + 1)));\n\n    case 'ADD_POST':\n      return [].concat(_toConsumableArray(state), [action.post]);\n\n    default:\n      return state;\n  }\n\n  return state;\n}; // const rootReducer = combineReducers({posts, comments})\n// export default rootReducer\n\n\nexport default postReducer;","map":{"version":3,"sources":["/Users/kenya/Desktop/react-pic-app/kenyawall/src/redux/reducer.js"],"names":["_posts","combineReducers","postReducer","posts","state","action","type","slice","index","post"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,SAAQC,eAAR,QAA8B,OAA9B,C,CAEA;AACA;AACA;AACA;;AAEA,IAAMC,WAAW,GAAG,SAASC,KAAT,GAAsC;AAAA,MAAvBC,KAAuB,uEAAfJ,MAAe;AAAA,MAAPK,MAAO;;AAEtD;AAEJ,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,aAAL;AAAoB,0CAAWF,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAeF,MAAM,CAACG,KAAtB,CAAX,sBAA4CJ,KAAK,CAACG,KAAN,CAAYF,MAAM,CAACG,KAAP,GAAe,CAA3B,CAA5C;;AACpB,SAAK,UAAL;AAAiB,0CAAWJ,KAAX,IAAkBC,MAAM,CAACI,IAAzB;;AACjB;AAAS,aAAOL,KAAP;AAJb;;AAOA,SAAOA,KAAP;AACC,CAZD,C,CAcA;AAEA;;;AAEA,eAAeF,WAAf","sourcesContent":["import _posts from '../data/posts'\nimport {combineReducers} from 'redux'\n\n// function comments(state=[], action){\n//     console.log('comments reducer')\n//     return state\n// }\n\nconst postReducer = function posts(state = _posts, action){\n    \n    // console.log('posts reducer')\n\nswitch(action.type){\n    \n    case 'REMOVE_POST': return [...state.slice(0, action.index), ...state.slice(action.index + 1 )]\n    case 'ADD_POST': return [...state, action.post]\n    default: return state\n}\n\nreturn state\n}\n\n// const rootReducer = combineReducers({posts, comments})\n\n// export default rootReducer\n\nexport default postReducer"]},"metadata":{},"sourceType":"module"}